import React, { useState } from "react";
import { Button } from "@/components/ui/button";
import { Card, CardContent } from "@/components/ui/card";
import { motion } from "framer-motion";
import { Wallet } from "lucide-react";

const LandingPage = () => {
  const [loanAmount, setLoanAmount] = useState(0);
  const collateral = loanAmount * 0.5;
  const interest = loanAmount * 0.05;

  return (
    <div className="min-h-screen bg-gradient-to-br from-[#e0f7fa] via-[#f1f8ff] to-[#e3f2fd] p-12 text-gray-900 flex flex-col items-center justify-center">
      <motion.h1
        className="text-6xl font-extrabold mb-8 drop-shadow-lg text-gray-800"
        initial={{ opacity: 0, y: -20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.5 }}
      >
        Lending & Borrowing Platform
      </motion.h1>

      {/* Action Buttons */}
      <div className="flex gap-6 w-full max-w-4xl justify-center mb-8">
        <Button className="bg-blue-500 hover:bg-blue-600 text-lg px-10 py-5 rounded-xl shadow-md font-bold hover:scale-105 transition-transform text-white">
          Lend Assets
        </Button>
        <Button className="bg-green-500 hover:bg-green-600 text-lg px-10 py-5 rounded-xl shadow-md font-bold hover:scale-105 transition-transform text-white">
          Borrow Assets
        </Button>
        <Button className="bg-orange-500 hover:bg-orange-600 text-lg px-10 py-5 rounded-xl flex items-center gap-3 shadow-md font-bold hover:scale-105 transition-transform text-white">
          <Wallet size={24} /> Connect Wallet
        </Button>
      </div>

      <div className="flex w-full max-w-6xl">
        {/* Main Content */}
        <div className="flex-1 grid grid-cols-1 md:grid-cols-2 gap-8">
          <Card className="bg-white text-gray-900 shadow-lg p-8 rounded-2xl hover:scale-105 transition-transform border border-gray-300">
            <CardContent>
              <h2 className="text-2xl font-semibold text-blue-600">Total Value Locked (TVL)</h2>
              <p className="text-lg mt-2 font-medium text-gray-700">$1,250,000</p>
            </CardContent>
          </Card>
          <Card className="bg-white text-gray-900 shadow-lg p-8 rounded-2xl hover:scale-105 transition-transform border border-gray-300">
            <CardContent>
              <h2 className="text-2xl font-semibold text-green-600">Active Loans</h2>
              <p className="text-lg mt-2 font-medium text-gray-700">235 Loans</p>
            </CardContent>
          </Card>
        </div>

        {/* Knowledge Sidebar */}
        <div className="w-1/3 ml-8 bg-white shadow-lg p-6 rounded-2xl border border-gray-300">
          <h2 className="text-2xl font-semibold text-gray-800 mb-4">Why Choose Us?</h2>
          <p className="text-gray-700 mb-4">
            Our platform is built on Internet Computer Protocol (ICP), ensuring fast, secure, and low-cost transactions.
          </p>
          <ul className="list-disc list-inside text-gray-700 space-y-2">
            <li>Decentralized and Trustless Lending</li>
            <li>Near Zero Gas Fees with ICP</li>
            <li>Seamless Wallet Integration</li>
            <li>Transparent Smart Contracts</li>
            <li>Fast and Scalable Transactions</li>
          </ul>
        </div>
      </div>

      {/* Loan Calculator Section */}
      <div className="bg-white shadow-lg p-6 rounded-2xl mt-8 w-full max-w-3xl border border-gray-300">
        <h2 className="text-2xl font-semibold text-gray-800 mb-4">Loan Calculator</h2>
        <input 
          type="number" 
          placeholder="Enter loan amount" 
          className="w-full p-3 border rounded-lg mb-4" 
          value={loanAmount} 
          onChange={(e) => setLoanAmount(Number(e.target.value))} 
        />
        <p className="text-gray-700">Required Collateral: <span className="font-bold">{collateral.toFixed(2)} ICP</span></p>
        <p className="text-gray-700">Estimated Interest: <span className="font-bold">{interest.toFixed(2)} ICP</span></p>
      </div>

      {/* Recent Transactions */}
      <div className="bg-white shadow-lg p-6 rounded-2xl mt-8 w-full max-w-3xl border border-gray-300">
        <h2 className="text-2xl font-semibold text-gray-800 mb-4">Recent Transactions</h2>
        <p className="text-gray-700">ðŸ”¹ User A borrowed 20 ICP</p>
        <p className="text-gray-700">ðŸ”¹ User B repaid 15 ICP</p>
        <p className="text-gray-700">ðŸ”¹ User C deposited 100 ICP</p>
      </div>

      {/* Extra Navigation */}
      <div className="flex gap-6 mt-12 w-full max-w-4xl justify-center">
        <Button className="bg-gray-600 hover:bg-gray-700 text-lg px-10 py-5 rounded-xl shadow-md font-bold hover:scale-105 transition-transform text-white">
          Sign In
        </Button>
        <Button className="bg-gray-800 hover:bg-gray-900 text-lg px-10 py-5 rounded-xl shadow-md font-bold hover:scale-105 transition-transform text-white">
          Log In
        </Button>
        <Button className="bg-red-500 hover:bg-red-600 text-lg px-10 py-5 rounded-xl shadow-md font-bold hover:scale-105 transition-transform text-white">
          Exit Page
        </Button>
      </div>
    </div>
  );
};

export default LandingPage;







---------------------------------------


lend your asset page . 

import React, { useState } from "react";
import { Button } from "@/components/ui/button";
import { Card, CardContent } from "@/components/ui/card";
import { motion } from "framer-motion";
import { Wallet } from "lucide-react";

const LendingPage = () => {
  const [depositAmount, setDepositAmount] = useState(0);
  const [estimatedEarnings, setEstimatedEarnings] = useState(0);
  
  const handleDepositChange = (e) => {
    const amount = Number(e.target.value);
    setDepositAmount(amount);
    setEstimatedEarnings(amount * 0.08); // Assuming 8% return
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-[#dfefff] via-[#f1f8ff] to-[#e3f2fd] p-12 text-gray-900 flex flex-col items-center justify-center">
      <motion.h1
        className="text-5xl font-extrabold mb-8 drop-shadow-lg text-gray-800"
        initial={{ opacity: 0, y: -20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.5 }}
      >
        Lend Your Assets
      </motion.h1>
      
      <div className="bg-white shadow-lg p-6 rounded-2xl w-full max-w-3xl border border-gray-300">
        <h2 className="text-2xl font-semibold text-gray-800 mb-4">Deposit ICP</h2>
        <input 
          type="number" 
          placeholder="Enter amount to lend" 
          className="w-full p-3 border rounded-lg mb-4" 
          value={depositAmount} 
          onChange={handleDepositChange} 
        />
        <p className="text-gray-700">Estimated Earnings: <span className="font-bold">{estimatedEarnings.toFixed(2)} ICP</span></p>
      </div>
      
      <div className="bg-white shadow-lg p-6 rounded-2xl mt-8 w-full max-w-3xl border border-gray-300">
        <h2 className="text-2xl font-semibold text-gray-800 mb-4">Recent Deposits</h2>
        <p className="text-gray-700">ðŸ”¹ User A deposited 50 ICP</p>
        <p className="text-gray-700">ðŸ”¹ User B deposited 100 ICP</p>
        <p className="text-gray-700">ðŸ”¹ User C deposited 200 ICP</p>
      </div>
      
      <div className="flex gap-6 mt-12 w-full max-w-4xl justify-center">
        <Button className="bg-blue-500 hover:bg-blue-600 text-lg px-10 py-5 rounded-xl shadow-md font-bold hover:scale-105 transition-transform text-white">
          Deposit
        </Button>
        <Button className="bg-gray-500 hover:bg-gray-600 text-lg px-10 py-5 rounded-xl shadow-md font-bold hover:scale-105 transition-transform text-white">
          Withdraw
        </Button>
        <Button className="bg-orange-500 hover:bg-orange-600 text-lg px-10 py-5 rounded-xl flex items-center gap-3 shadow-md font-bold hover:scale-105 transition-transform text-white">
          <Wallet size={24} /> Connect Wallet
        </Button>
      </div>
    </div>
  );
};

export default LendingPage;
-------------------------------------------
BORROW PAGE : 
import React, { useState } from "react";
import { Button } from "@/components/ui/button";
import { Card, CardContent } from "@/components/ui/card";
import { motion } from "framer-motion";

const BorrowingPage = () => {
  const [amount, setAmount] = useState(0);
  const [duration, setDuration] = useState(1);
  const [collateral, setCollateral] = useState(0);
  const [interestRate, setInterestRate] = useState(5);
  const [ltv, setLtv] = useState(150);
  const [repayment, setRepayment] = useState(0);
  const [monthlyRepayment, setMonthlyRepayment] = useState(0);
  const [liquidationThreshold, setLiquidationThreshold] = useState(0);

  const calculateRepayment = () => {
    const totalInterest = (amount * (interestRate / 100) * duration) / 12;
    const totalRepayment = parseFloat(amount) + totalInterest;
    const monthlyPayment = totalRepayment / duration;
    const liquidationLevel = collateral * (ltv / 100) * 0.8; // 80% of collateral value
    
    setRepayment(totalRepayment);
    setMonthlyRepayment(monthlyPayment);
    setLiquidationThreshold(liquidationLevel);
  };

  const handleBorrow = () => {
    const requiredCollateral = amount * 1.5; // Ensure at least 150% collateral
    if (collateral < requiredCollateral) {
      alert(`Insufficient collateral! You need at least ${requiredCollateral.toFixed(2)} ICP to borrow ${amount} ICP.`);
      return;
    }
    calculateRepayment();
    alert(`Borrowing ${amount} ICP for ${duration} months with ${collateral} ICP as collateral. Total repayment: ${repayment.toFixed(2)} ICP. Monthly payment: ${monthlyRepayment.toFixed(2)} ICP`);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-[#cce7ff] via-[#e6f2ff] to-[#99ccff] p-12 text-gray-900 flex flex-col items-center justify-center">
      <motion.h1
        className="text-5xl font-extrabold mb-8 drop-shadow-lg text-gray-800"
        initial={{ opacity: 0, y: -20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.5 }}
      >
        Borrow ICP
      </motion.h1>
      
      <Card className="bg-white shadow-lg p-6 rounded-2xl w-full max-w-3xl border border-gray-300 text-center">
        <h2 className="text-2xl font-semibold text-gray-800 mb-4">Borrowing Details</h2>
        <div className="flex flex-col gap-4 text-left">
          <label className="font-semibold text-gray-700">Amount to Borrow</label>
          <input type="number" value={amount} onChange={(e) => setAmount(e.target.value)} className="p-3 border rounded-lg" />
          
          <label className="font-semibold text-gray-700">Duration (months)</label>
          <input type="number" value={duration} onChange={(e) => setDuration(e.target.value)} className="p-3 border rounded-lg" />
          
          <label className="font-semibold text-gray-700">Collateral (ICP) (Minimum: {amount * 1.5} ICP)</label>
          <input type="number" value={collateral} onChange={(e) => setCollateral(e.target.value)} className="p-3 border rounded-lg" />
          
          <p className="text-gray-600">Loan-to-Value (LTV): {ltv}% | Interest Rate: {interestRate}% per year</p>
          <p className="text-gray-700 font-semibold">Estimated Total Repayment: {repayment.toFixed(2)} ICP</p>
          <p className="text-gray-700 font-semibold">Estimated Monthly Payment: {monthlyRepayment.toFixed(2)} ICP</p>
          <p className="text-red-600 font-semibold">Liquidation Threshold: {liquidationThreshold.toFixed(2)} ICP</p>

          <Button className="bg-blue-500 hover:bg-blue-600 text-white px-8 py-3 rounded-xl shadow-md font-bold" onClick={handleBorrow}>
            Borrow
          </Button>
          <Button className="mt-4 bg-gray-400 hover:bg-gray-500 text-white px-6 py-2 rounded-xl shadow-md font-bold" onClick={() => window.history.back()}>
            Back
          </Button>
        </div>
      </Card>
    </div>
  );
};

export default BorrowingPage;
---------------------------
dashboard 


import React from "react";
import { Button } from "@/components/ui/button";
import { Card, CardContent } from "@/components/ui/card";
import { motion } from "framer-motion";

const DashboardPage = () => {
  return (
    <div className="min-h-screen bg-gradient-to-br from-[#cce7ff] via-[#e6f2ff] to-[#99ccff] p-12 text-gray-900 flex flex-col items-center justify-center">
      <motion.h1
        className="text-5xl font-extrabold mb-8 drop-shadow-lg text-gray-800"
        initial={{ opacity: 0, y: -20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.5 }}
      >
        Dashboard
      </motion.h1>
      
      <Card className="bg-white shadow-lg p-6 rounded-2xl w-full max-w-4xl border border-gray-300 text-center">
        <h2 className="text-2xl font-semibold text-gray-800 mb-4">Overview</h2>
        
        <div className="grid grid-cols-2 gap-6">
          <Card className="p-4 bg-gray-100 rounded-lg shadow">
            <h3 className="text-xl font-semibold text-gray-700">Total Balance</h3>
            <p className="text-3xl font-bold text-blue-600">1000 ICP</p>
          </Card>
          
          <Card className="p-4 bg-gray-100 rounded-lg shadow">
            <h3 className="text-xl font-semibold text-gray-700">Borrowed Amount</h3>
            <p className="text-3xl font-bold text-red-500">500 ICP</p>
          </Card>
        </div>
        
        <div className="mt-6 grid grid-cols-2 gap-6">
          <Card className="p-4 bg-gray-100 rounded-lg shadow">
            <h3 className="text-xl font-semibold text-gray-700">LTV Ratio</h3>
            <p className="text-3xl font-bold text-orange-500">50%</p>
          </Card>
          
          <Card className="p-4 bg-gray-100 rounded-lg shadow">
            <h3 className="text-xl font-semibold text-gray-700">Collateral</h3>
            <p className="text-3xl font-bold text-green-500">750 ICP</p>
          </Card>
        </div>
        
        <div className="mt-6 grid grid-cols-2 gap-6">
          <Card className="p-4 bg-gray-100 rounded-lg shadow">
            <h3 className="text-xl font-semibold text-gray-700">Loan Health Tracker</h3>
            <p className="text-3xl font-bold text-purple-500">Healthy</p>
          </Card>
          
          <Card className="p-4 bg-gray-100 rounded-lg shadow">
            <h3 className="text-xl font-semibold text-gray-700">Transaction Ledger</h3>
            <p className="text-lg text-gray-600">View all loan transactions</p>
            <Button className="mt-2 bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded-xl shadow-md font-bold">
              View Ledger
            </Button>
          </Card>
        </div>
        
        <div className="mt-6 flex gap-4 justify-center">
          <Button className="bg-blue-500 hover:bg-blue-600 text-white px-6 py-3 rounded-xl shadow-md font-bold">
            Borrow More
          </Button>
          <Button className="bg-green-500 hover:bg-green-600 text-white px-6 py-3 rounded-xl shadow-md font-bold">
            Repay Loan
          </Button>
        </div>
      </Card>
      
      <Button className="mt-6 bg-gray-400 hover:bg-gray-500 text-white px-4 py-2 rounded-xl shadow-md font-bold">
        Back
      </Button>
    </div>
  );
};

export default DashboardPage;
------------------------------------------------
import React from "react";
import { Button } from "@/components/ui/button";
import { Card } from "@/components/ui/card";
import { motion } from "framer-motion";

const transactions = [
  { user: "User1", amount: "500 ICP", status: "Healthy", date: "2025-03-29" },
  { user: "User2", amount: "750 ICP", status: "Warning", date: "2025-03-28" },
  { user: "User3", amount: "200 ICP", status: "Critical", date: "2025-03-27" },
];

const TransactionLedger = () => {
  return (
    <div className="min-h-screen bg-gradient-to-br from-[#b3e0ff] via-[#d9f2ff] to-[#80c1ff] p-12 text-gray-900 flex flex-col items-center justify-center">
      <motion.h1
        className="text-5xl font-extrabold mb-8 drop-shadow-lg text-gray-800"
        initial={{ opacity: 0, y: -20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.5 }}
      >
        Transaction Ledger
      </motion.h1>
      
      <Card className="bg-white shadow-lg p-6 rounded-2xl w-full max-w-4xl border border-gray-300 text-center">
        <h2 className="text-2xl font-semibold text-gray-800 mb-4">Loan Transactions</h2>
        <table className="w-full border-collapse">
          <thead>
            <tr className="bg-gray-200">
              <th className="p-3">User</th>
              <th className="p-3">Amount</th>
              <th className="p-3">Loan Health</th>
              <th className="p-3">Date</th>
            </tr>
          </thead>
          <tbody>
            {transactions.map((tx, index) => (
              <tr key={index} className="border-b text-center">
                <td className="p-3">{tx.user}</td>
                <td className="p-3 font-bold text-blue-600">{tx.amount}</td>
                <td className={`p-3 font-bold ${tx.status === "Healthy" ? "text-green-500" : tx.status === "Warning" ? "text-orange-500" : "text-red-500"}`}>{tx.status}</td>
                <td className="p-3 text-gray-600">{tx.date}</td>
              </tr>
            ))}
          </tbody>
        </table>
      </Card>
      
      <Button className="mt-6 bg-gray-400 hover:bg-gray-500 text-white px-4 py-2 rounded-xl shadow-md font-bold">
        Back
      </Button>
    </div>
  );
};

export default TransactionLedger;
-----------------------------------------------

import React from "react";
import { Button } from "@/components/ui/button";
import { Card } from "@/components/ui/card";
import { motion } from "framer-motion";

const ConnectWalletPage = () => {
  return (
    <div className="min-h-screen bg-gradient-to-br from-[#cce7ff] via-[#e6f2ff] to-[#99ccff] p-12 flex flex-col items-center justify-center text-gray-900">
      <motion.h1
        className="text-5xl font-extrabold mb-8 drop-shadow-lg text-gray-800"
        initial={{ opacity: 0, y: -20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.5 }}
      >
        Connect Your Wallet
      </motion.h1>
      
      <Card className="bg-white shadow-lg p-6 rounded-2xl w-full max-w-3xl border border-gray-300 text-center">
        <h2 className="text-2xl font-semibold text-gray-800 mb-4">Select a Wallet</h2>
        
        <div className="grid grid-cols-1 gap-4">
          <Button className="bg-blue-500 hover:bg-blue-600 text-white px-6 py-3 rounded-xl shadow-md font-bold w-full">
            Connect with Metamask
          </Button>
          <Button className="bg-purple-500 hover:bg-purple-600 text-white px-6 py-3 rounded-xl shadow-md font-bold w-full">
            Connect with WalletConnect
          </Button>
          <Button className="bg-green-500 hover:bg-green-600 text-white px-6 py-3 rounded-xl shadow-md font-bold w-full">
            Connect with ICP Wallet
          </Button>
        </div>
        
        <p className="mt-4 text-gray-600 text-sm">
          By connecting your wallet, you agree to our Terms of Service.
        </p>
      </Card>
      
      <Button className="mt-6 bg-gray-400 hover:bg-gray-500 text-white px-4 py-2 rounded-xl shadow-md font-bold">
        Back
      </Button>
    </div>
  );
};

export default ConnectWalletPage;
